Some ideas:
    * we should have a kind of matrix that will store what is written on the screen
    * we should also have a kind of cursor that points where the player is writing
    * we also need a function that will convert any pressed key to its corresponding
    ascii-art letter, by printing it
    * we will need a visual cursor pointing to the selected cell, to allow the player
    to modify any letter and not just the last letter which is the case in the original
    wordle

Actual algorithm:
    main {
        verify window size, if not enough quit with a warning message
        main_loop {
            display main menu (New Game, Continue, Settings, Quit)
            switch (main_menu_choice) {
                case 'New game':
                    reset stuff to the starting state {
                        - pick a random word_to_guess from the file

                    }
                    display starting UI
                    session_loop 6 attempts { // gives you 6 attempts or word-found win (exit loop), 1 attempt per iteration
                        put cursor[COL] at the start internally and visually
                        word[5]; to be filled by the loop below
                        get_valid_word_loop { // get a valid character (letter or arrow or enter or backspace) per iteration
                            get input(can accept letters OR left and right arrows to move cursor OR Enter OR backspace)
                            switch (input) {
                                case letter: // writing behavior
                                    if (cell at cursor is empty)
                                        display letter where the cursor is pointing, and update word[] the internal array
                                        push cursor forward if not last cell (you cant go beyond last cell)
                                        increment entered_letters
                                    else 
                                        do nothing or warning
                                case left or right arrows:
                                    move cursor
                                case enter:
                                    if too short(we have less than 5/5):
                                        warning
                                    else (we have a 5letter word)
                                        if (word_to_guess == word) {
                                            win
                                            goto somewhere to restart game
                                        } else {
                                            if (word is in dictionary) {
                                                color the letters appropriately in matrix (and in keyboard to be implemented later)
                                                move cursor[ROW] down
                                                break out of loop and goto next attempt
                                            }
                                            else { // word is not in dictionary
                                                warning: word not found
                                            }
                                        }
                                case backspace:
                                    if (first cell or filled cell)
                                        we delete the letter at cursor, and keep cursor at its position
                                    else // not first and empty
                                        we delete the cell before cursor and move cursor backwards
                                        
                                    // optimizing the above if-else block
                                    if (not first and empty)
                                        move the cursor backwards (internally and visually)
                                    we delete letter at cursor, and decrement the enetered_letters counter
                                    
                                case numbers:
                                    game controls like ending the session, restarting, or quitting
                                default:
                                    // ignore
                            }
                        }                     
                    }
                case 'Continue': (for later)
                    load last state (matrix, cursor, ...)
                case 'Settings': (for later)
                    display settings menu
                case 'Quit':
                    reset the terminal back from the ncurses changes
                    quit
            }
        }
    }